--- a/Source/NSPopUpButtonCell.m	2022-12-29 04:05:31.000000000 -0500
+++ b/Source/NSPopUpButtonCell.m	2023-10-03 22:52:38.054099892 -0500
@@ -123,8 +123,7 @@
 
   [self _initMenu];
   [self setPullsDown: flag];
-  [self setAltersStateOfSelectedItem: YES];
-  [self setUsesItemFromMenu: YES];
+  _pbcFlags.usesItemFromMenu = YES;
   [self setPreferredEdge: NSMaxYEdge];
   [self setArrowPosition: NSPopUpArrowAtCenter];
 
@@ -150,9 +149,7 @@
 
   if (_menu != nil)
     {
-      // prevent further actions on the menu
-      _pbcFlags.usesItemFromMenu = NO;
-      [self setMenu: nil];
+      [self setMenu:nil];
     }
   _selectedItem = nil;
   [super dealloc];
@@ -178,12 +175,6 @@
                     name: nil
                   object: _menu];
     }
-  if (_selectedItem != nil)
-    {
-      // _selectedItem may be dead after the following ASSIGN statement,
-      // so make sure we leave no dangling pointer behind.
-      _selectedItem = nil;
-    }
   ASSIGN(_menu, menu);
   if (_menu != nil)
     {
@@ -210,9 +201,8 @@
       [self setMenuView: nil];
     }
   
-  // Select the first item because that is the only selection that makes
-  // sense for pull downs.
-  [self selectItemAtIndex: [_menu numberOfItems] > 0 ? 0 : - 1];
+  // FIXME: Select the first or last item?
+  [self selectItemAtIndex: [_menu numberOfItems] - 1];
   [self synchronizeTitleAndSelectedItem];
 }
 
@@ -333,16 +323,13 @@
 {
   id <NSMenuItem> selectedItem = [self selectedItem];
 
-  if (!_pbcFlags.pullsDown)
+  if (flag)
     {
-      if (flag)
-	{
-	  [selectedItem setState: NSOnState];
-	}
-      else
-	{
-	  [selectedItem setState: NSOffState];
-	}
+      [selectedItem setState: NSOnState];
+    }
+  else
+    {
+      [selectedItem setState: NSOffState];
     }
 
   _pbcFlags.altersStateOfSelectedItem = flag;
@@ -677,7 +664,7 @@
 
   if (_selectedItem != nil)
     {
-      if (!_pbcFlags.pullsDown && _pbcFlags.altersStateOfSelectedItem)
+      if (_pbcFlags.altersStateOfSelectedItem)
         {
           [_selectedItem setState: NSOffState];
         }
@@ -694,7 +681,7 @@
 
   if (_selectedItem != nil)
     {
-      if (!_pbcFlags.pullsDown && _pbcFlags.altersStateOfSelectedItem)
+      if (_pbcFlags.altersStateOfSelectedItem)
         {
           [_selectedItem setState: NSOnState];
         }
@@ -911,7 +898,7 @@
   NSNotificationCenter  *nc = [NSNotificationCenter defaultCenter];
   NSWindow              *cvWin = [controlView window];
   NSMenuView            *mr = [_menu menuRepresentation];
-  NSInteger                   selectedItem;
+  NSInteger             selectedItem;
 
   [nc postNotificationName: NSPopUpButtonCellWillPopUpNotification
                     object: self];
@@ -924,14 +911,17 @@
   cellFrame.origin = [cvWin convertBaseToScreen: cellFrame.origin];
 
   if (_pbcFlags.pullsDown)
-    selectedItem = -1;
+    {
+      selectedItem = -1;
+    }
   else
     {
       selectedItem = [self indexOfSelectedItem];
-      if (selectedItem == -1)
-	{
-	  selectedItem = 0;
-	}
+    }
+
+  if (selectedItem == -1)
+    {
+      selectedItem = 0;
     }
 
   if (selectedItem > 0)
@@ -959,9 +949,9 @@
 		       selectedItem: selectedItem];
 
   [nc addObserver: self
-      selector: @selector(_handleNotification:)
-      name: NSMenuDidSendActionNotification
-      object: _menu];
+         selector: @selector(_handleNotification:)
+             name: NSMenuDidSendActionNotification
+           object: _menu];
 }
 
 /**
